import type * as gax from 'google-gax';
import type { Callback, CallOptions, Descriptors, ClientOptions, PaginationCallback } from 'google-gax';
import { Transform } from 'stream';
import * as protos from '../../protos/protos';
/**
 *  A service that handles company management, including CRUD and enumeration.
 * @class
 * @memberof v4
 */
export declare class CompanyServiceClient {
    private _terminated;
    private _opts;
    private _providedCustomServicePath;
    private _gaxModule;
    private _gaxGrpc;
    private _protos;
    private _defaults;
    private _universeDomain;
    private _servicePath;
    auth: gax.GoogleAuth;
    descriptors: Descriptors;
    warn: (code: string, message: string, warnType?: string) => void;
    innerApiCalls: {
        [name: string]: Function;
    };
    pathTemplates: {
        [name: string]: gax.PathTemplate;
    };
    companyServiceStub?: Promise<{
        [name: string]: Function;
    }>;
    /**
     * Construct an instance of CompanyServiceClient.
     *
     * @param {object} [options] - The configuration object.
     * The options accepted by the constructor are described in detail
     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
     * The common options are:
     * @param {object} [options.credentials] - Credentials object.
     * @param {string} [options.credentials.client_email]
     * @param {string} [options.credentials.private_key]
     * @param {string} [options.email] - Account email address. Required when
     *     using a .pem or .p12 keyFilename.
     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
     *     .p12 key downloaded from the Google Developers Console. If you provide
     *     a path to a JSON file, the projectId option below is not necessary.
     *     NOTE: .pem and .p12 require you to specify options.email as well.
     * @param {number} [options.port] - The port on which to connect to
     *     the remote host.
     * @param {string} [options.projectId] - The project ID from the Google
     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
     *     the environment variable GCLOUD_PROJECT for your project ID. If your
     *     app is running in an environment which supports
     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
     *     your project ID will be detected automatically.
     * @param {string} [options.apiEndpoint] - The domain name of the
     *     API remote host.
     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
     *     Follows the structure of {@link gapicConfig}.
     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.
     *     For more information, please check the
     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
     *     need to avoid loading the default gRPC version and want to use the fallback
     *     HTTP implementation. Load only fallback version and pass it to the constructor:
     *     ```
     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
     *     const client = new CompanyServiceClient({fallback: true}, gax);
     *     ```
     */
    constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback);
    /**
     * Initialize the client.
     * Performs asynchronous operations (such as authentication) and prepares the client.
     * This function will be called automatically when any class method is called for the
     * first time, but if you need to initialize it before calling an actual method,
     * feel free to call initialize() directly.
     *
     * You can await on this method if you want to make sure the client is initialized.
     *
     * @returns {Promise} A promise that resolves to an authenticated service stub.
     */
    initialize(): Promise<{
        [name: string]: Function;
    }>;
    /**
     * The DNS address for this API service.
     * @deprecated Use the apiEndpoint method of the client instance.
     * @returns {string} The DNS address for this service.
     */
    static get servicePath(): string;
    /**
     * The DNS address for this API service - same as servicePath.
     * @deprecated Use the apiEndpoint method of the client instance.
     * @returns {string} The DNS address for this service.
     */
    static get apiEndpoint(): string;
    /**
     * The DNS address for this API service.
     * @returns {string} The DNS address for this service.
     */
    get apiEndpoint(): string;
    get universeDomain(): string;
    /**
     * The port for this API service.
     * @returns {number} The default port for this service.
     */
    static get port(): number;
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     * @returns {string[]} List of default scopes.
     */
    static get scopes(): string[];
    getProjectId(): Promise<string>;
    getProjectId(callback: Callback<string, undefined, undefined>): void;
    /**
     * Creates a new company entity.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Resource name of the tenant under which the company is created.
     *
     *   The format is "projects/{project_id}/tenants/{tenant_id}", for example,
     *   "projects/foo/tenants/bar".
     * @param {google.cloud.talent.v4.Company} request.company
     *   Required. The company to be created.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.talent.v4.Company|Company}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v4/company_service.create_company.js</caption>
     * region_tag:jobs_v4_generated_CompanyService_CreateCompany_async
     */
    createCompany(request?: protos.google.cloud.talent.v4.ICreateCompanyRequest, options?: CallOptions): Promise<[
        protos.google.cloud.talent.v4.ICompany,
        protos.google.cloud.talent.v4.ICreateCompanyRequest | undefined,
        {} | undefined
    ]>;
    createCompany(request: protos.google.cloud.talent.v4.ICreateCompanyRequest, options: CallOptions, callback: Callback<protos.google.cloud.talent.v4.ICompany, protos.google.cloud.talent.v4.ICreateCompanyRequest | null | undefined, {} | null | undefined>): void;
    createCompany(request: protos.google.cloud.talent.v4.ICreateCompanyRequest, callback: Callback<protos.google.cloud.talent.v4.ICompany, protos.google.cloud.talent.v4.ICreateCompanyRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Retrieves specified company.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the company to be retrieved.
     *
     *   The format is
     *   "projects/{project_id}/tenants/{tenant_id}/companies/{company_id}", for
     *   example, "projects/api-test-project/tenants/foo/companies/bar".
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.talent.v4.Company|Company}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v4/company_service.get_company.js</caption>
     * region_tag:jobs_v4_generated_CompanyService_GetCompany_async
     */
    getCompany(request?: protos.google.cloud.talent.v4.IGetCompanyRequest, options?: CallOptions): Promise<[
        protos.google.cloud.talent.v4.ICompany,
        protos.google.cloud.talent.v4.IGetCompanyRequest | undefined,
        {} | undefined
    ]>;
    getCompany(request: protos.google.cloud.talent.v4.IGetCompanyRequest, options: CallOptions, callback: Callback<protos.google.cloud.talent.v4.ICompany, protos.google.cloud.talent.v4.IGetCompanyRequest | null | undefined, {} | null | undefined>): void;
    getCompany(request: protos.google.cloud.talent.v4.IGetCompanyRequest, callback: Callback<protos.google.cloud.talent.v4.ICompany, protos.google.cloud.talent.v4.IGetCompanyRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Updates specified company.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {google.cloud.talent.v4.Company} request.company
     *   Required. The company resource to replace the current resource in the
     *   system.
     * @param {google.protobuf.FieldMask} request.updateMask
     *   Strongly recommended for the best service experience.
     *
     *   If {@link protos.google.cloud.talent.v4.UpdateCompanyRequest.update_mask|update_mask}
     *   is provided, only the specified fields in
     *   {@link protos.google.cloud.talent.v4.UpdateCompanyRequest.company|company} are updated.
     *   Otherwise all the fields are updated.
     *
     *   A field mask to specify the company fields to be updated. Only
     *   top level fields of {@link protos.google.cloud.talent.v4.Company|Company} are
     *   supported.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.talent.v4.Company|Company}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v4/company_service.update_company.js</caption>
     * region_tag:jobs_v4_generated_CompanyService_UpdateCompany_async
     */
    updateCompany(request?: protos.google.cloud.talent.v4.IUpdateCompanyRequest, options?: CallOptions): Promise<[
        protos.google.cloud.talent.v4.ICompany,
        protos.google.cloud.talent.v4.IUpdateCompanyRequest | undefined,
        {} | undefined
    ]>;
    updateCompany(request: protos.google.cloud.talent.v4.IUpdateCompanyRequest, options: CallOptions, callback: Callback<protos.google.cloud.talent.v4.ICompany, protos.google.cloud.talent.v4.IUpdateCompanyRequest | null | undefined, {} | null | undefined>): void;
    updateCompany(request: protos.google.cloud.talent.v4.IUpdateCompanyRequest, callback: Callback<protos.google.cloud.talent.v4.ICompany, protos.google.cloud.talent.v4.IUpdateCompanyRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Deletes specified company.
     * Prerequisite: The company has no jobs associated with it.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the company to be deleted.
     *
     *   The format is
     *   "projects/{project_id}/tenants/{tenant_id}/companies/{company_id}", for
     *   example, "projects/foo/tenants/bar/companies/baz".
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.protobuf.Empty|Empty}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v4/company_service.delete_company.js</caption>
     * region_tag:jobs_v4_generated_CompanyService_DeleteCompany_async
     */
    deleteCompany(request?: protos.google.cloud.talent.v4.IDeleteCompanyRequest, options?: CallOptions): Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.talent.v4.IDeleteCompanyRequest | undefined,
        {} | undefined
    ]>;
    deleteCompany(request: protos.google.cloud.talent.v4.IDeleteCompanyRequest, options: CallOptions, callback: Callback<protos.google.protobuf.IEmpty, protos.google.cloud.talent.v4.IDeleteCompanyRequest | null | undefined, {} | null | undefined>): void;
    deleteCompany(request: protos.google.cloud.talent.v4.IDeleteCompanyRequest, callback: Callback<protos.google.protobuf.IEmpty, protos.google.cloud.talent.v4.IDeleteCompanyRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Lists all companies associated with the project.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Resource name of the tenant under which the company is created.
     *
     *   The format is "projects/{project_id}/tenants/{tenant_id}", for example,
     *   "projects/foo/tenants/bar".
     * @param {string} request.pageToken
     *   The starting indicator from which to return results.
     * @param {number} request.pageSize
     *   The maximum number of companies to be returned, at most 100.
     *   Default is 100 if a non-positive number is provided.
     * @param {boolean} request.requireOpenJobs
     *   Set to true if the companies requested must have open jobs.
     *
     *   Defaults to false.
     *
     *   If true, at most
     *   {@link protos.google.cloud.talent.v4.ListCompaniesRequest.page_size|page_size} of
     *   companies are fetched, among which only those with open jobs are returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.talent.v4.Company|Company}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listCompaniesAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listCompanies(request?: protos.google.cloud.talent.v4.IListCompaniesRequest, options?: CallOptions): Promise<[
        protos.google.cloud.talent.v4.ICompany[],
        protos.google.cloud.talent.v4.IListCompaniesRequest | null,
        protos.google.cloud.talent.v4.IListCompaniesResponse
    ]>;
    listCompanies(request: protos.google.cloud.talent.v4.IListCompaniesRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.talent.v4.IListCompaniesRequest, protos.google.cloud.talent.v4.IListCompaniesResponse | null | undefined, protos.google.cloud.talent.v4.ICompany>): void;
    listCompanies(request: protos.google.cloud.talent.v4.IListCompaniesRequest, callback: PaginationCallback<protos.google.cloud.talent.v4.IListCompaniesRequest, protos.google.cloud.talent.v4.IListCompaniesResponse | null | undefined, protos.google.cloud.talent.v4.ICompany>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Resource name of the tenant under which the company is created.
     *
     *   The format is "projects/{project_id}/tenants/{tenant_id}", for example,
     *   "projects/foo/tenants/bar".
     * @param {string} request.pageToken
     *   The starting indicator from which to return results.
     * @param {number} request.pageSize
     *   The maximum number of companies to be returned, at most 100.
     *   Default is 100 if a non-positive number is provided.
     * @param {boolean} request.requireOpenJobs
     *   Set to true if the companies requested must have open jobs.
     *
     *   Defaults to false.
     *
     *   If true, at most
     *   {@link protos.google.cloud.talent.v4.ListCompaniesRequest.page_size|page_size} of
     *   companies are fetched, among which only those with open jobs are returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.talent.v4.Company|Company} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listCompaniesAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listCompaniesStream(request?: protos.google.cloud.talent.v4.IListCompaniesRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listCompanies`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Resource name of the tenant under which the company is created.
     *
     *   The format is "projects/{project_id}/tenants/{tenant_id}", for example,
     *   "projects/foo/tenants/bar".
     * @param {string} request.pageToken
     *   The starting indicator from which to return results.
     * @param {number} request.pageSize
     *   The maximum number of companies to be returned, at most 100.
     *   Default is 100 if a non-positive number is provided.
     * @param {boolean} request.requireOpenJobs
     *   Set to true if the companies requested must have open jobs.
     *
     *   Defaults to false.
     *
     *   If true, at most
     *   {@link protos.google.cloud.talent.v4.ListCompaniesRequest.page_size|page_size} of
     *   companies are fetched, among which only those with open jobs are returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.talent.v4.Company|Company}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v4/company_service.list_companies.js</caption>
     * region_tag:jobs_v4_generated_CompanyService_ListCompanies_async
     */
    listCompaniesAsync(request?: protos.google.cloud.talent.v4.IListCompaniesRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.talent.v4.ICompany>;
    /**
     * Return a fully-qualified company resource name string.
     *
     * @param {string} project
     * @param {string} tenant
     * @param {string} company
     * @returns {string} Resource name string.
     */
    companyPath(project: string, tenant: string, company: string): string;
    /**
     * Parse the project from Company resource.
     *
     * @param {string} companyName
     *   A fully-qualified path representing Company resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromCompanyName(companyName: string): string | number;
    /**
     * Parse the tenant from Company resource.
     *
     * @param {string} companyName
     *   A fully-qualified path representing Company resource.
     * @returns {string} A string representing the tenant.
     */
    matchTenantFromCompanyName(companyName: string): string | number;
    /**
     * Parse the company from Company resource.
     *
     * @param {string} companyName
     *   A fully-qualified path representing Company resource.
     * @returns {string} A string representing the company.
     */
    matchCompanyFromCompanyName(companyName: string): string | number;
    /**
     * Return a fully-qualified job resource name string.
     *
     * @param {string} project
     * @param {string} tenant
     * @param {string} job
     * @returns {string} Resource name string.
     */
    jobPath(project: string, tenant: string, job: string): string;
    /**
     * Parse the project from Job resource.
     *
     * @param {string} jobName
     *   A fully-qualified path representing Job resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromJobName(jobName: string): string | number;
    /**
     * Parse the tenant from Job resource.
     *
     * @param {string} jobName
     *   A fully-qualified path representing Job resource.
     * @returns {string} A string representing the tenant.
     */
    matchTenantFromJobName(jobName: string): string | number;
    /**
     * Parse the job from Job resource.
     *
     * @param {string} jobName
     *   A fully-qualified path representing Job resource.
     * @returns {string} A string representing the job.
     */
    matchJobFromJobName(jobName: string): string | number;
    /**
     * Return a fully-qualified tenant resource name string.
     *
     * @param {string} project
     * @param {string} tenant
     * @returns {string} Resource name string.
     */
    tenantPath(project: string, tenant: string): string;
    /**
     * Parse the project from Tenant resource.
     *
     * @param {string} tenantName
     *   A fully-qualified path representing Tenant resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromTenantName(tenantName: string): string | number;
    /**
     * Parse the tenant from Tenant resource.
     *
     * @param {string} tenantName
     *   A fully-qualified path representing Tenant resource.
     * @returns {string} A string representing the tenant.
     */
    matchTenantFromTenantName(tenantName: string): string | number;
    /**
     * Terminate the gRPC channel and close the client.
     *
     * The client will no longer be usable and all future behavior is undefined.
     * @returns {Promise} A promise that resolves when the client is closed.
     */
    close(): Promise<void>;
}
